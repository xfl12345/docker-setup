user www-data;
worker_processes auto;

pid /run/nginx.pid;
load_module modules/ngx_http_js_module.so;
load_module modules/ngx_http_geoip_module.so;
load_module modules/ngx_stream_js_module.so;
load_module modules/ngx_stream_geoip_module.so;

events {
    include snippets/private/by_context/events/nginx_events_snippets.conf;
}

http {
    include snippets/private/by_context/http/nginx_http_snippets.conf;

    ##
    # Virtual Host Configs
    ##
    include /etc/nginx/conf.d/*.conf;
}


stream {
    log_format proxy '$remote_addr [$time_local] $ssl_preread_server_name $diy_forward_backend '
        '$protocol $status $bytes_sent $bytes_received '
        '$session_time "$upstream_addr" '
        '"$upstream_bytes_sent" "$upstream_bytes_received" "$upstream_connect_time"';

    include snippets/private/by_context/stream/domain_map.conf;

    server {
        listen unix:/var/run/nginx/stream_eof.sock proxy_protocol;
        return "";
    }

    # 无效上游，终止交易。发送 EOF
    upstream stream_eof {
        server unix:/var/run/nginx/stream_eof.sock;
    }

    server {
        listen 0.0.0.0:443;
        listen 0.0.0.0:2083;
        listen [::]:443;
        listen [::]:2083;

        # 启用SSL预读，不解密流量，只提取 SNI
        ssl_preread on;
        access_log /var/log/nginx/stream_access.log proxy buffer=256m flush=2s;

        proxy_protocol on;
        proxy_pass $diy_forward_backend;
    }

    server {
        # 默认为明文HTTP
        listen 0.0.0.0:80;
        listen 0.0.0.0:2082;
        listen [::]:80;
        listen [::]:2082;

        access_log /var/log/nginx/stream_access.log proxy buffer=256m flush=2s;

        proxy_protocol on;
        proxy_pass unix:/var/run/nginx/fdn_server.sock;
    }
}
