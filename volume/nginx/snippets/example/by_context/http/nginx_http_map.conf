map "$ssl_server_name" $preset_ssl_domain_name {
    "~^\d+\.\d+\.\d+\.\d+$"           "";
    # 匹配三级及以上域名，提取出主域名 
    "~^(?:[a-zA-Z0-9-]+\.)+(?<domain>[a-zA-Z0-9-]+\.[a-zA-Z]{2,})$"   $domain;
    # 匹配二级域名，保持不变
    "~^[a-zA-Z0-9-]+\.[a-zA-Z]{2,}$"  $ssl_server_name;
    # 匹配顶级域名，保持不变
    "~^[a-zA-Z]+$"                    $ssl_server_name;
    default                           "";
}

map "$preset_ssl_domain_name" $diy_ssl_domain_name {
    # 这里需要添加更多的具体映射规则以限制默认行为
    # 建议直接重新写一个 map
    # 若不采取行动，可能会导致安全事故
    # 需要额外自定义 "" 的映射规则
    default    $preset_ssl_domain_name;
}

map "$diy_ssl_domain_name" $cert_dir_name {
    # 这里需要添加更多的具体映射规则以限制默认行为
    # 建议直接重新写一个 map
    # 若不采取行动，可能会导致安全事故
    default     $diy_ssl_domain_name;
}

map "$cert_dir_name" $path_to_cert_file {
    default     /etc/nginx/ssl/${cert_dir_name}/fullchain.pem;
}

map "$cert_dir_name" $path_to_cert_key_file {
    default     /etc/nginx/ssl/${cert_dir_name}/key.pem;
}

map "$http_upgrade" $diy_connection_upgrade {
    ""              close;
    # keep-alive    keep-alive;
    default         upgrade;
}

# Generated by AI TongYi And ChatGPT
# 定义一个 map，将 $host 转换为 $clean_host
map $host $clean_host {
    default $host;  # 默认情况下，$clean_host 等于 $host
    "~*^\[([0-9a-f:]+)\](?::(\d+))?$" $1;  # 匹配 IPv6 地址，可能带端口号
    "~^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(?::(\d+))?$" "[$host]";  # 匹配 IPv4 地址，可能带端口号
    "~*^([a-z0-9](-[a-z0-9]*)?(\.[a-z0-9](-[a-z0-9]*)?)+)(?::(\d+))?$" $1;  # 匹配主机名，可能带端口号  # 匹配主机名，可能带端口号
}

map "${clean_host}_${diy_ssl_domain_name}_${diy_app_name}" $access_log_file_name {
    # 能提取出 diy_app_name 时已经符合合法域名的要求
    "~*^.+_.+_[a-z0-9-]+$"                                           access_app_${diy_app_name}.log;
    # 能匹配上 SSL 证书的有效域名
    "~*^(?:[a-z0-9-]+\.)*([a-z]{2,})_(?:[a-z0-9-]+\.)*([a-z]{2,})_$" access_tls_${diy_ssl_domain_name}.log;
    # 纯 HTTP 请求但是 Host 有合法域名的
    "~*^(?:[a-z0-9-]+\.)*([a-z]{2,})__$"                             access_plain_http.log;
    # 未知的请求 例如纯 IP 地址访问
    default                                                          access.log;
}

map "$clean_host" $loggable {
    default       1;
}


map "$http3" $diy_http3_compatible_host_for_proxy {
    h3          ${clean_host}:${server_port};
    hq          ${clean_host}:${server_port};
    default     $http_host;
}

map "${scheme}${server_port}" $diy_full_request_url {
    https443    ${scheme}://${clean_host}${request_uri};
    http80      ${scheme}://${clean_host}${request_uri};
    default     ${scheme}://${diy_http3_compatible_host_for_proxy}${request_uri};
}
